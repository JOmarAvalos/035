<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/security
                           http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- <security:global-method-security secured-annotations="enabled" /> -->
    
    <security:http auto-config="true" use-expressions="true">
        <security:headers>
            <security:frame-options policy="ALLOW-FROM" strategy="whitelist" value="SAMEORIGIN"></security:frame-options>
            <security:frame-options policy="ALLOW-FROM" strategy="whitelist" value="187.162.208.133"></security:frame-options>
        </security:headers>
    
        <security:intercept-url pattern="/auth/login_check" access="isAuthenticated() or isAnonymous()" />
        <security:intercept-url pattern="/login" access="isAuthenticated() or isAnonymous()" />
        <security:intercept-url pattern="/cuestionarios" access="isAuthenticated() or isAnonymous()" />
        <security:intercept-url pattern="/cuestionarios/**" access="isAuthenticated() or isAnonymous()" />
        <security:intercept-url pattern="/registro" access="isAuthenticated() or isAnonymous()" />
        <security:intercept-url pattern="/registro/**" access="isAuthenticated() or isAnonymous()" />
        <security:intercept-url pattern="/resources/**" access="isAuthenticated() or isAnonymous()" />
        <security:intercept-url pattern="/" access="isAuthenticated() or isAnonymous()" />
        <security:intercept-url pattern="/cache.appcache" access="isAuthenticated() or isAnonymous()" />
        <security:intercept-url pattern="/favicon.ico" access="isAuthenticated() or isAnonymous()" />
        <security:intercept-url pattern="/**" access="isAuthenticated()" />
        
        <security:access-denied-handler error-page="/unauthorized"/>
		
        <security:session-management>
        	<security:concurrency-control max-sessions="10" 
        			expired-url="/login?error=sessionExpiredDuplicateLogin" error-if-maximum-exceeded="true" />
		</security:session-management>

        <!-- Override default login and logout pages -->
        <security:form-login login-page="/login" 
                             default-target-url="/"
                             authentication-failure-url="/login?error" 
                             username-parameter="username" 
                             password-parameter="password"
                             login-processing-url="/auth/login_check"
                             authentication-success-handler-ref="savedRequestAwareAuthenticationSuccessHandler" />
        
        <security:logout logout-success-url="/login?logout" delete-cookies="JSESSIONID" />
        
        <!-- enable remember me -->
        <security:remember-me token-validity-seconds="1209600" remember-me-parameter="remember_me" data-source-ref="dataSource" />
        
        <!-- <security:csrf /> -->
    </security:http>

    <security:authentication-manager>
        <security:authentication-provider >
            <security:password-encoder hash="bcrypt" ref="encoder" />
	        <security:jdbc-user-service data-source-ref="dataSource"
	            users-by-username-query="SELECT usuario,contrasena, case ban_activo when 1 then true else false end estatus FROM desarrollo.tbl_usuarios WHERE usuario = ? And ban_activo=1 "
	            authorities-by-username-query="
												select u.usuario, cp.nombre as role
												from desarrollo.tbl_usuarios as u, 
														desarrollo.tbl_cata_perfil as cp 
												where cp.cve_perfil = u.id_perfil
												and u.usuario = ?
												  " />
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <constructor-arg name="strength" value="11" />
    </bean>
 
</beans>